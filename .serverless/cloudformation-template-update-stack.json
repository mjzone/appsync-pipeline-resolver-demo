{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "ServerlessDeploymentBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        }
      }
    },
    "ServerlessDeploymentBucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "ServerlessDeploymentBucket"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Effect": "Deny",
              "Principal": "*",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "/*"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      }
                    ]
                  ]
                }
              ],
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": false
                }
              }
            }
          ]
        }
      }
    },
    "userTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "KeySchema": [
          {
            "AttributeName": "userId",
            "KeyType": "HASH"
          }
        ],
        "AttributeDefinitions": [
          {
            "AttributeName": "userId",
            "AttributeType": "S"
          }
        ],
        "BillingMode": "PAY_PER_REQUEST"
      }
    },
    "organizationTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "KeySchema": [
          {
            "AttributeName": "orgId",
            "KeyType": "HASH"
          }
        ],
        "AttributeDefinitions": [
          {
            "AttributeName": "orgId",
            "AttributeType": "S"
          }
        ],
        "BillingMode": "PAY_PER_REQUEST"
      }
    },
    "GraphQlApi": {
      "Type": "AWS::AppSync::GraphQLApi",
      "Properties": {
        "Name": "api",
        "AuthenticationType": "API_KEY",
        "AdditionalAuthenticationProviders": [],
        "XrayEnabled": false
      }
    },
    "GraphQlApiKeymyApiKey": {
      "Type": "AWS::AppSync::ApiKey",
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "GraphQlApi",
            "ApiId"
          ]
        },
        "Description": "My api key",
        "Expires": 1688922000
      }
    },
    "GraphQlSchema": {
      "Type": "AWS::AppSync::GraphQLSchema",
      "Properties": {
        "Definition": "schema {\n  query: Query\n}\n\ntype Query {\n  getUserById(userId: ID!): UserDetails!\n}\n\ntype UserDetails {\n  userId: ID!\n  email: String!\n  firstName: String\n  lastName: String\n  organization: Organization\n}\n\ntype Organization {\n  orgId: ID!\n  orgName: String!\n  logoUrl: String\n}",
        "ApiId": {
          "Fn::GetAtt": [
            "GraphQlApi",
            "ApiId"
          ]
        }
      }
    },
    "GraphQlDsUserTableRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "appsync.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "GraphQlDsUserTablePolicy",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Action": [
                    "dynamodb:DeleteItem",
                    "dynamodb:GetItem",
                    "dynamodb:PutItem",
                    "dynamodb:Query",
                    "dynamodb:Scan",
                    "dynamodb:UpdateItem",
                    "dynamodb:BatchGetItem",
                    "dynamodb:BatchWriteItem",
                    "dynamodb:ConditionCheckItem"
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        ":",
                        [
                          "arn",
                          "aws",
                          "dynamodb",
                          "us-east-1",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          {
                            "Fn::Join": [
                              "/",
                              [
                                "table",
                                {
                                  "Ref": "userTable"
                                }
                              ]
                            ]
                          }
                        ]
                      ]
                    },
                    {
                      "Fn::Join": [
                        "/",
                        [
                          {
                            "Fn::Join": [
                              ":",
                              [
                                "arn",
                                "aws",
                                "dynamodb",
                                "us-east-1",
                                {
                                  "Ref": "AWS::AccountId"
                                },
                                {
                                  "Fn::Join": [
                                    "/",
                                    [
                                      "table",
                                      {
                                        "Ref": "userTable"
                                      }
                                    ]
                                  ]
                                }
                              ]
                            ]
                          },
                          "*"
                        ]
                      ]
                    }
                  ]
                }
              ]
            }
          }
        ]
      }
    },
    "GraphQlDsOrganizationTableRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "appsync.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "GraphQlDsOrganizationTablePolicy",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Action": [
                    "dynamodb:DeleteItem",
                    "dynamodb:GetItem",
                    "dynamodb:PutItem",
                    "dynamodb:Query",
                    "dynamodb:Scan",
                    "dynamodb:UpdateItem",
                    "dynamodb:BatchGetItem",
                    "dynamodb:BatchWriteItem",
                    "dynamodb:ConditionCheckItem"
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        ":",
                        [
                          "arn",
                          "aws",
                          "dynamodb",
                          "us-east-1",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          {
                            "Fn::Join": [
                              "/",
                              [
                                "table",
                                {
                                  "Ref": "organizationTable"
                                }
                              ]
                            ]
                          }
                        ]
                      ]
                    },
                    {
                      "Fn::Join": [
                        "/",
                        [
                          {
                            "Fn::Join": [
                              ":",
                              [
                                "arn",
                                "aws",
                                "dynamodb",
                                "us-east-1",
                                {
                                  "Ref": "AWS::AccountId"
                                },
                                {
                                  "Fn::Join": [
                                    "/",
                                    [
                                      "table",
                                      {
                                        "Ref": "organizationTable"
                                      }
                                    ]
                                  ]
                                }
                              ]
                            ]
                          },
                          "*"
                        ]
                      ]
                    }
                  ]
                }
              ]
            }
          }
        ]
      }
    },
    "GraphQlDsUserTable": {
      "Type": "AWS::AppSync::DataSource",
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "GraphQlApi",
            "ApiId"
          ]
        },
        "Name": "UserTable",
        "Type": "AMAZON_DYNAMODB",
        "ServiceRoleArn": {
          "Fn::GetAtt": [
            "GraphQlDsUserTableRole",
            "Arn"
          ]
        },
        "DynamoDBConfig": {
          "AwsRegion": "us-east-1",
          "TableName": {
            "Ref": "userTable"
          },
          "UseCallerCredentials": false,
          "Versioned": false
        }
      }
    },
    "GraphQlDsOrganizationTable": {
      "Type": "AWS::AppSync::DataSource",
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "GraphQlApi",
            "ApiId"
          ]
        },
        "Name": "OrganizationTable",
        "Type": "AMAZON_DYNAMODB",
        "ServiceRoleArn": {
          "Fn::GetAtt": [
            "GraphQlDsOrganizationTableRole",
            "Arn"
          ]
        },
        "DynamoDBConfig": {
          "AwsRegion": "us-east-1",
          "TableName": {
            "Ref": "organizationTable"
          },
          "UseCallerCredentials": false,
          "Versioned": false
        }
      }
    },
    "GraphQlFunctionConfigurationgetUserInfo": {
      "Type": "AWS::AppSync::FunctionConfiguration",
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "GraphQlApi",
            "ApiId"
          ]
        },
        "Name": "getUserInfo",
        "DataSourceName": {
          "Fn::GetAtt": [
            "GraphQlDsUserTable",
            "Name"
          ]
        },
        "FunctionVersion": "2018-05-29",
        "RequestMappingTemplate": "{\n    \"version\" : \"2018-05-29\",\n    \"operation\" : \"GetItem\",\n    \"key\" : {\n        \"userId\" : $util.dynamodb.toDynamoDBJson($ctx.args.userId)\n    }\n}",
        "ResponseMappingTemplate": "$util.toJson($ctx.result)"
      }
    },
    "GraphQlFunctionConfigurationgetOrgInfo": {
      "Type": "AWS::AppSync::FunctionConfiguration",
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "GraphQlApi",
            "ApiId"
          ]
        },
        "Name": "getOrgInfo",
        "DataSourceName": {
          "Fn::GetAtt": [
            "GraphQlDsOrganizationTable",
            "Name"
          ]
        },
        "FunctionVersion": "2018-05-29",
        "RequestMappingTemplate": "#set($orgId = $ctx.prev.result.orgId)\n{\n    \"version\" : \"2018-05-29\",\n    \"operation\" : \"GetItem\",\n    \"key\" : {\n        \"orgId\" : $util.dynamodb.toDynamoDBJson($orgId)\n    }\n}",
        "ResponseMappingTemplate": "$util.qr($ctx.stash.put(\"user\", $ctx.prev.result))\n$util.qr($ctx.stash.put(\"organization\", $ctx.result))\n{}"
      }
    },
    "GraphQlResolverQuerygetUserById": {
      "Type": "AWS::AppSync::Resolver",
      "DependsOn": "GraphQlSchema",
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "GraphQlApi",
            "ApiId"
          ]
        },
        "TypeName": "Query",
        "FieldName": "getUserById",
        "RequestMappingTemplate": "{}",
        "ResponseMappingTemplate": "$util.toJson({\n  \"userId\": $ctx.stash.user.userId,\n  \"username\":  $ctx.stash.user.username,\n  \"firstName\":  $ctx.stash.user.firstName,\n  \"email\":  $ctx.stash.user.email,\n  \"organization\":  $ctx.stash.organization\n})",
        "Kind": "PIPELINE",
        "PipelineConfig": {
          "Functions": [
            {
              "Fn::GetAtt": [
                "GraphQlFunctionConfigurationgetUserInfo",
                "FunctionId"
              ]
            },
            {
              "Fn::GetAtt": [
                "GraphQlFunctionConfigurationgetOrgInfo",
                "FunctionId"
              ]
            }
          ]
        }
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": {
        "Ref": "ServerlessDeploymentBucket"
      },
      "Export": {
        "Name": "sls-sls-pipelineresolver-episode-dev-ServerlessDeploymentBucketName"
      }
    },
    "GraphQlApiKeymyApiKey": {
      "Value": {
        "Fn::GetAtt": [
          "GraphQlApiKeymyApiKey",
          "ApiKey"
        ]
      }
    },
    "GraphQlApiId": {
      "Value": {
        "Fn::GetAtt": [
          "GraphQlApi",
          "ApiId"
        ]
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-GraphQlApiId"
        }
      }
    },
    "GraphQlApiUrl": {
      "Value": {
        "Fn::GetAtt": [
          "GraphQlApi",
          "GraphQLUrl"
        ]
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-GraphQlApiUrl"
        }
      }
    }
  }
}